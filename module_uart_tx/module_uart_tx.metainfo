-------------------------------------------------------------------------------
-- Descriptive metadata
-------------------------------------------------------------------------------

componentName = "xSOFTip UART TX"
componentFullName = ""
alternativeNames = { }
componentDescription = "Single Fully featured Uart Transmitter" 
componentVersion = "1v0"

-------------------------------------------------------------------------------
-- Parameter descriptions.
-------------------------------------------------------------------------------

configPoints =
{
  txBufferSize =
  {
    short   = "TX Buffer Size",
    long    = "Array for buffering bytes before they are transmitted",
    help    = "",
    units   = "",
    type    = "int",
    resourceUsageFlags = {"linear","orthogonal"},
    min     = 8,
    max     = 64,
    default = 8
  },
  txInitialBaudRate =
  {
    short   = "Initial Baud Rate",
    long    = "Initial baud Setting on start-up. Can be changed dynamically later.",
    help    = "Bit time will be derived as XS1_TIMER_HZ / baud_rate;",
    units   = "Bits Per Second",
    type    = "int",
    resourceUsageFlags = {"noeffect"},
    min     = 1,
    max     = 115200,
    default = 115200
  },
  txInitialBPC =
  {
    short   = "Inital Bits Per Character",
    long    = "Initial BPC Setting on start-up. Can be changed dynamically later.",
    help    = "",
    type    = "int",
    units   = "bits",
    resourceUsageFlags = {"noeffect"},
    max     = 8,
    min     = 5,
    default = 8
  },
  txInitialStopBits =
  {
    short   = "Inital Stop Bits",
    long    = "Initial stop bits Setting on start-up. Can be changed dynamically later",
    help    = "",
    type    = "int",
    units   = "bits",
    resourceUsageFlags = {"noeffect"},
    max     = 2,
    min     = 0,
    default = 1
  },
  txInitialParity =
  {
    short   = "Inital Parity Setting",
    long    = "Initial Parity Setting on start-up. Can be changed dynamically later",
    help    = "",
    type    = "string",
    units   = "",
    resourceUsageFlags = {"noeffect"},
    options = {"UART_TX_PARITY_NONE", "UART_TX_PARITY_EVEN", "UART_TX_PARITY_ODD"},
    default = "UART_TX_PARITY_EVEN"
  },
}

derivedValues = {}

ports = {
  p_uart_tx = {
    short   = "UART TX",
    long    = "UART TX Pin",
    help    = "",
    width   = 1
  }
}

channels = {
  c_tx_uart = {
    short = "TX channel",
    long  = "Channel for the client to send TX data to the Uart transitter",
    help  = "",
  },
}        

function getConfigStatus()
  local status = "Valid Configuration"
  local issues = {}
  return status, issues
end
            
-------------------------------------------------------------------------------
-- Source generation functions
-------------------------------------------------------------------------------

generatedCode = {
  includes = { 
    "uart_tx.h"
  },
  globals = [[
    out port p_uart${swblock.id}_tx = XS1_PORT_1A;
  ]],
  body = [[
    unsigned char tx_buffer[64];
    uart_tx(p_uart${swblock.id}_tx, tx_buffer, ${swblock.params.txBufferSize}, ${swblock.params.txInitialBaudRate},  ${swblock.params.txInitialBPC},  ${swblock.params.txInitialParity},  ${swblock.params.txInitialStopBits}, ${swblock.chanends.c_tx_uart});
  ]]
}

